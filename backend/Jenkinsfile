pipeline {
    agent any

    environment {
        TARGET_BRANCH='develop/be'
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    // def branch = env.gitlabSourceBranch ?: 'develop/be'
                    // if(branch != env.TARGET_BRANCH) {
                    //     error "This build is only for the '${env.TARGET_BRANCH}' branch, but was run on '${branch}'"
                    // }

                    checkout scm
                }
            }
        }
        stage('Build') {
            steps {
                dir('backend') {
                    withCredentials([file(credentialsId: 'APPLICATION_YML', variable: 'application_yml')]) {
                        sh 'cp $application_yml ./src/main/resources/application.yml'
                    }
                    sh 'chmod +x ./gradlew'
                    sh './gradlew clean build'
                    // sh './gradlew test -i'
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    // def image = docker.build("ptpt-dev-backend:latest", 'backend/.')
                    // image.push()
                     sh 'docker build -t ptpt-dev-backend:latest ./backend'
                }
            }
        }
        stage('Depoly') {
            steps {
                script { 
                    sh 'docker-compose stop backend || true'
                    sh 'docker-compose rm -f backend || true'
                    sh 'docker-compose up backend -d'
                    // sh 'docker-compose up -d'
                    
                }
            }
        }
    }
}