pipeline {
    agent any

    environment {
        TARGET_BRANCH='develop/fe'
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    // def branch = env.gitlabSourceBranch ?: 'develop/fe'
                    // if(branch != env.TARGET_BRANCH) {
                    //     error "This build is only for the '${env.TARGET_BRANCH}' branch, but was run on '${branch}'"
                    // }

                    checkout scm
                }
            }
        }
        stage('Set .ENV File') {
            steps {
                dir('frontend') {
                    withCredentials([file(credentialsId: 'ENV_FILE', variable: 'env_file')]) {
                        sh 'cp $env_file ./.env'
                    }
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    // def image = docker.build("ptpt-dev-frontend:latest", 'frontend/.')
                    // image.push()
                    sh 'docker build -t ptpt-dev-frontend:latest ./frontend'
                }
            }
        }
        stage('Depoly') {
            steps {
                script {
                    sh 'docker-compose stop frontend || true'
                    sh 'docker-compose rm -f frontend || true'
                    sh 'docker-compose up frontend -d'
                }
            }
        }
    }
}