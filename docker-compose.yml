version: '3.8'

services:
  backend:
    image: ptpt-dev-backend:latest
    container_name: ptpt-dev-backend
    # restart: unless-stopped
    ports:
    # 임시로 8081할당
      - 8081:8080

  main-backend:
    image: ptpt-master-backend:latest
    container_name: ptpt-master-backend
    restart: unless-stopped
    prots:
      - 8082:8080
    volumes:
      - /opt/openvidu/custom-nginx-locations/backend:/server_config
  
  frontend:
    image: ptpt-dev-frontend:latest
    container_name: ptpt-dev-frontend

    # restart: unless-stopped
    # volumes:
    #   - /opt/openvidu/custom-nginx-locations/react:/react_build
    # ports:
    #   - 5173:5173
    ports:
      - 5173:80 # 프론트가 nginx를 가지고 있으므로 컨테이너에서는 80포트를 연 상태

  main-frontend:
    image: ptpt-master-frontend:latest
    container_name: ptpt-master-backend
    restart: unless-stopped
    ports:
      - 5174:80
    volumes:
      - /opt/openvidu/custom-nginx-locations/frontend:/server_config


  mysql:
    image: mysql:8.0.37
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: pt2_db
    volumes:
    # 컨테이너가 삭제되어도 데이터 유지하도록 마운트      
      - /shared/data/mysql:/var/lib/mysql
    expose:
      - "3306"

  main-mysql:
    image: mysql:8.0.37
    container_name: main-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: pt2_db
    volumes:
    # 컨테이너가 삭제되어도 데이터 유지하도록 마운트      
      - /shared/data/main_mysql:/var/lib/mysql
    expose:
      - "3307"

  mongo:
    image: mongo:7.0.12
    container_name: mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 1234
    volumes:
      - /shared/data/mongo:/data/db
    expose:
      - "27017"
    hostname: mongo

  mongo-express:
    depends_on:
      - mongo
    image: mongo-express
    container_name: mongo-express
    restart: unless-stopped
    ports:
      - 27117:8081
    environment:
      PORT: 8081
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_SERVER: mongo      
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: 1234
      ME_CONFIG_MONGODB_URL: mongo://root:1234@mongo:27017/
    hostname: mongo-express

  main-mongo:
    image: mongo:7.0.12
    container_name: main-mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 1234
    volumes:
      - /shared/data/main_mongo:/data/db
    expose:
      - "27018"
    hostname: main-mongo

  main-mongo-express:
    depends_on:
      - main-mongo
    image: mongo-express
    container_name: main-mongo-express
    restart: unless-stopped
    ports:
      - 27118:8081
    environment:
      PORT: 8081
      ME_CONFIG_MONGODB_PORT: 27018
      ME_CONFIG_MONGODB_SERVER: mongo      
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: 1234
      ME_CONFIG_MONGODB_URL: main-mongo://root:1234@mongo:27018/
    hostname: main-mongo-express