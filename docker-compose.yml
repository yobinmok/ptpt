version: '3.8'

services:
  backend:
    image: ptpt-dev-backend:latest
    container_name: ptpt-dev-backend
    # restart: unless-stopped
    ports:
    # 임시로 8081할당
      - 8081:8080

    # image를 위한 볼륨 경로 설정
    # nginx에서 접근 가능한 볼륨으로 설정
    volumes:
      - /opt/openvidu/custom-nginx-locations/ptpt-dev-backend:/home/ubuntu/uploads
  
  frontend:
    image: ptpt-dev-frontend:latest
    container_name: ptpt-dev-frontend

    # restart: unless-stopped
    # volumes:
    #   - /opt/openvidu/custom-nginx-locations/react:/react_build
    # ports:
    #   - 5173:5173
    ports:
      - 5173:80 # 프론트가 nginx를 가지고 있으므로 컨테이너에서는 80포트를 연 상태

  mysql:
    image: mysql:8.0.37
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: pt2_db
    volumes:
    # 컨테이너가 삭제되어도 데이터 유지하도록 마운트      
      - /shared/data/mysql:/var/lib/mysql
    expose:
      - "3306"

  mongo:
    image: mongodb/mongodb-community-server:7.0.12
    container_name: mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 1234
    volumes:
      - /shared/data/mongo:/data/db
    expose:
      - "27017"
  # mongo-express:
  #   image: mongo-express
  #   restart: unless-stopped
  #   ports:
  #     - 9000:8081
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: root
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: 1234
  #     ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
  #     ME_CONFIG_BASICAUTH: false